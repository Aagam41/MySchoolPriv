# Generated by Django 3.0.8 on 2020-09-09 10:20

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ChapterTopic',
            fields=[
                ('chapter_topic_id', models.AutoField(primary_key=True, serialize=False)),
                ('topic_id', models.IntegerField()),
                ('topic_name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'chapter_topic',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('feedback_id', models.AutoField(primary_key=True, serialize=False)),
                ('feedback_rating', models.IntegerField()),
                ('feedback_comments', models.TextField()),
                ('feedback_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'feedback',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FeedbackQuestion',
            fields=[
                ('feedback_question_id', models.AutoField(primary_key=True, serialize=False)),
                ('question_text', models.TextField()),
                ('feedback_question_credit', models.IntegerField()),
            ],
            options={
                'db_table': 'feedback_question',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FeedbackQuestionGroup',
            fields=[
                ('feedback_question_group_id', models.AutoField(primary_key=True, serialize=False)),
                ('question_group', models.TextField()),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'feedback_question_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MapTeacherSubject',
            fields=[
                ('map_teacher_subject_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'map_teacher_subject',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MarksObtained',
            fields=[
                ('marks_id', models.AutoField(primary_key=True, serialize=False)),
                ('marks_gained', models.IntegerField()),
            ],
            options={
                'db_table': 'marks_obtained',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MarksType',
            fields=[
                ('marks_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('marks_type', models.CharField(max_length=100)),
                ('out_of', models.IntegerField()),
            ],
            options={
                'db_table': 'marks_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaperPatternEntry',
            fields=[
                ('paper_pattern_entry_id', models.AutoField(primary_key=True, serialize=False)),
                ('paper_pattern_name', models.CharField(max_length=100)),
                ('total_marks', models.IntegerField()),
            ],
            options={
                'db_table': 'paper_pattern_entry',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaperPatternQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paper_pattern_question_id', models.IntegerField()),
                ('paper_pattern_question_text', models.TextField()),
                ('rau_type', models.IntegerField()),
                ('total_marks', models.IntegerField()),
            ],
            options={
                'db_table': 'paper_pattern_question',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('person_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('phone_no', models.BigIntegerField()),
                ('email_id', models.CharField(max_length=100)),
                ('password', models.TextField()),
                ('salt', models.TextField()),
            ],
            options={
                'db_table': 'person',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('staff_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'staff',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('student_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'student',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StudentEfficacy',
            fields=[
                ('student_efficacy_id', models.AutoField(primary_key=True, serialize=False)),
                ('father_education', models.IntegerField()),
                ('mother_education', models.IntegerField()),
                ('internet_facility', models.IntegerField()),
                ('study_time', models.IntegerField()),
                ('paid_tution', models.IntegerField()),
                ('past_failures', models.IntegerField()),
                ('free_time', models.IntegerField()),
                ('extra_curricular_activties', models.IntegerField()),
                ('absences', models.IntegerField()),
                ('class_engagement', models.IntegerField()),
                ('health', models.IntegerField()),
            ],
            options={
                'db_table': 'student_efficacy',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SubjectChapter',
            fields=[
                ('subject_chapter_id', models.AutoField(primary_key=True, serialize=False)),
                ('chapter_id', models.IntegerField()),
                ('chapter_name', models.CharField(max_length=15)),
                ('remembarence_credit', models.IntegerField()),
                ('applied_knowledge_credit', models.IntegerField()),
                ('understanding_credit', models.IntegerField()),
                ('chapter_credit', models.IntegerField()),
            ],
            options={
                'db_table': 'subject_chapter',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblClass',
            fields=[
                ('class_field', models.CharField(db_column='class', max_length=3, primary_key=True, serialize=False)),
                ('describe', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'class',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tblrole',
            fields=[
                ('role_id', models.AutoField(primary_key=True, serialize=False)),
                ('role_type', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'tblrole',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tblsubject',
            fields=[
                ('subject_id', models.AutoField(primary_key=True, serialize=False)),
                ('subject_name', models.CharField(max_length=20)),
                ('remembarence_credit', models.IntegerField()),
                ('applied_knowledge_credit', models.IntegerField()),
                ('understanding_credit', models.IntegerField()),
                ('subject_credit', models.IntegerField()),
            ],
            options={
                'db_table': 'tblsubject',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('teacher_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'teacher',
                'managed': False,
            },
        ),
    ]
